# .env.example - Configuration Compressor
# Copier ce fichier vers .env et personnaliser les valeurs

# ===========================================
# üóúÔ∏è COMPRESSOR - CONFIGURATION PRODUCTION
# ===========================================

# ===========================================
# S√âCURIT√â (OBLIGATOIRE √Ä CHANGER)
# ===========================================

# Secret JWT (IMPORTANT: G√©n√©rer une cl√© s√©curis√©e)
# Utilisez: openssl rand -base64 32
JWT_SECRET=change-this-to-a-super-secure-random-key-in-production

# ===========================================
# R√âSEAU ET CORS
# ===========================================

# Origins autoris√©es (URLs qui peuvent acc√©der √† l'API)
# En production, remplacez par vos vrais domaines
CORS_ORIGIN=http://localhost:3001,https://your-domain.com

# ===========================================
# STOCKAGE ET FICHIERS
# ===========================================

# R√©pertoires de stockage (relatifs au projet)
UPLOADS_PATH=./uploads
LOGS_PATH=./logs

# Taille maximum des uploads (en bytes)
# 5GB par d√©faut = 5368709120
UPLOAD_MAX_SIZE=5368709120

# Dur√©e de r√©tention des fichiers (en secondes)
# 24h = 86400, 7 jours = 604800
FILE_RETENTION=86400

# ===========================================
# PERFORMANCE ET WORKERS
# ===========================================

# Nombre de workers de traitement simultan√©
# Recommand√©: nombre de CPU cores
WORKER_CONCURRENCY=2

# Nombre de replicas de workers Docker
WORKER_REPLICAS=1

# Timeout pour les jobs (en secondes)
# 30 minutes = 1800
JOB_TIMEOUT=1800

# ===========================================
# NETTOYAGE AUTOMATIQUE
# ===========================================

# Intervalle de nettoyage automatique (en secondes)
# 1 heure = 3600
CLEANUP_INTERVAL=3600

# ===========================================
# MONITORING (OPTIONNEL)
# ===========================================

# Mot de passe Grafana (si monitoring activ√©)
GRAFANA_PASSWORD=admin

# ===========================================
# DOCKER COMPOSE
# ===========================================

# Nom du projet Docker Compose
COMPOSE_PROJECT_NAME=compressor

# Version des images Docker
DOCKER_TAG=latest

# ===========================================
# EXEMPLES DE CONFIGURATION
# ===========================================

# D√âVELOPPEMENT LOCAL:
# JWT_SECRET=dev-secret-key-not-secure
# CORS_ORIGIN=http://localhost:3001,http://localhost:8080
# UPLOADS_PATH=./uploads
# WORKER_CONCURRENCY=1
# FILE_RETENTION=3600

# PRODUCTION:
# JWT_SECRET=your-super-secure-generated-key-here
# CORS_ORIGIN=https://compressor.yourdomain.com
# UPLOADS_PATH=/data/compressor/uploads
# LOGS_PATH=/var/log/compressor
# WORKER_CONCURRENCY=4
# WORKER_REPLICAS=2
# FILE_RETENTION=604800

# SERVEUR D√âDI√â:
# JWT_SECRET=production-secret-key-very-long-and-random
# CORS_ORIGIN=https://files.yourcompany.com,https://admin.yourcompany.com
# UPLOADS_PATH=/opt/compressor/data
# LOGS_PATH=/var/log/compressor
# WORKER_CONCURRENCY=8
# WORKER_REPLICAS=4
# UPLOAD_MAX_SIZE=10737418240

# ===========================================
# NOTES IMPORTANTES
# ===========================================

# 1. TOUJOURS changer JWT_SECRET en production
# 2. Configurer CORS_ORIGIN avec vos vrais domaines
# 3. V√©rifier que les r√©pertoires UPLOADS_PATH et LOGS_PATH existent
# 4. Ajuster WORKER_CONCURRENCY selon vos ressources CPU
# 5. Surveiller l'espace disque pour UPLOADS_PATH
# 6. Ce fichier ne doit PAS √™tre commit√© dans Git